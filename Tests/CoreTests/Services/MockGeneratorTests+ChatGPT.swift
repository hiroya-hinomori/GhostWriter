//
// Generated by ChatGPT 3.5 (OpenAI API)
//

import XCTest
@testable import Core

class MockGeneratorTests: XCTestCase {
    
    func testCreateOrder() {
        let mockGenerator = MockGenerator(inputFilePath: URL(string: "https://example.com/Protocol.swift")!, outputDirectoryPath: URL(string: "https://example.com/Outputs")!)
        let order = mockGenerator.createOrder()
        XCTAssertEqual(order, "Generate Mock class for this protocol with Swift without comment.\n\n")
    }
    
    func testCreateOutputPath() {
        let mockGenerator = MockGenerator(inputFilePath: URL(string: "https://example.com/Protocol.swift")!, outputDirectoryPath: URL(string: "https://example.com/Outputs")!)
        let outputPath = mockGenerator.createOutputPath()
        XCTAssertEqual(outputPath, URL(string: "https://example.com/Outputs/Mock+ChatGPT.swift")!)
    }
    
    func testCreateFileNameWithProtocol() {
        let mockGenerator = MockGenerator(inputFilePath: URL(string: "https://example.com/MyProtocol.swift")!, outputDirectoryPath: URL(string: "https://example.com/Outputs")!)
        let fileName = mockGenerator.createFileName()
        XCTAssertEqual(fileName, "MockMy+ChatGPT.swift")
    }
    
    func testCreateFileNameWithoutProtocol() {
        let mockGenerator = MockGenerator(inputFilePath: URL(string: "https://example.com/MyClass.swift")!, outputDirectoryPath: URL(string: "https://example.com/Outputs")!)
        let fileName = mockGenerator.createFileName()
        XCTAssertEqual(fileName, "MockMyClass+ChatGPT.swift")
    }
        
    func testLoadInvalidInputFile() {
        let mockGenerator = MockGenerator(inputFilePath: URL(string: "https://example.com/MyProtocol.swift")!, outputDirectoryPath: URL(string: "https://example.com/Outputs")!)
        XCTAssertThrowsError(try mockGenerator.loadInputFile(URL(string: "https://example.com/Invalid.swift")!))
    }
}
